name: Persistent Ubuntu VPS (Pterodactyl + Wings)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 335  # 5h30 + buffer

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: üìÅ Prepare vm_data folder
        run: |
          echo "üì¶ Preparing vm_data folder..."
          mkdir -p "$GITHUB_WORKSPACE/vm_data"
          cd "$GITHUB_WORKSPACE/vm_data"
          echo "‚úÖ vm_data folder ready."

      - name: üîÅ Restore VM data
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üîÅ Restoring previous VM data..."
          cd "$GITHUB_WORKSPACE/vm_data"
          rm -rf ./*
          git clone --branch vm-data https://$PAT_TOKEN@github.com/${{ github.repository }} . \
            || echo "‚ö†Ô∏è vm-data branch not found, starting fresh."

          # Restore Pterodactyl panel & wings
          if [ -d "panel" ]; then
            echo "üìÇ Restoring Pterodactyl panel..."
            sudo mkdir -p /var/www/pterodactyl
            sudo cp -r panel/* /var/www/pterodactyl/ 2>/dev/null || true
          fi

          if [ -d "wings" ]; then
            echo "ü™Ω Restoring Wings..."
            sudo mkdir -p /etc/pterodactyl /var/lib/pterodactyl
            sudo cp -r wings/* /etc/pterodactyl/ 2>/dev/null || true
          fi
          echo "‚úÖ Restore complete."

      - name: üåê Start SSHX session
        run: |
          echo "‚öôÔ∏è Starting SSHX..."
          cd "$GITHUB_WORKSPACE/vm_data"
          nohup bash -c "curl -sSf https://sshx.io/get | sh -s run > sshx_link.txt 2>&1" &
          sleep 8
          echo "üåç SSHX Link:"
          grep -Eo 'https://sshx.io/[^ ]+' sshx_link.txt || echo "‚ùå SSHX link not found"
          echo "‚úÖ SSHX running."

      - name: üöÄ Start Pterodactyl Panel + Wings (if installed)
        run: |
          if [ -d "/var/www/pterodactyl" ] && [ -f "/var/www/pterodactyl/artisan" ]; then
            echo "üñ•Ô∏è Starting Pterodactyl Panel..."
            cd /var/www/pterodactyl
            sudo php artisan serve --host=0.0.0.0 --port=8080 > panel.log 2>&1 &
          else
            echo "‚ö†Ô∏è Panel not found, skipping startup."
          fi

          if command -v wings >/dev/null 2>&1; then
            echo "ü™Ω Starting Pterodactyl Wings..."
            sudo systemctl start wings || sudo wings > wings.log 2>&1 &
          else
            echo "‚ö†Ô∏è Wings not found, skipping startup."
          fi

      - name: üíæ Start 10-sec autosave (panel + wings)
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üíæ Starting autosave..."
          cd "$GITHUB_WORKSPACE/vm_data"

          nohup bash -c "while true; do
            echo \"üì¶ [\$(date '+%H:%M:%S')] Backing up data...\"

            # Backup Panel
            sudo mkdir -p panel
            sudo rm -rf panel/*
            if [ -d /var/www/pterodactyl ]; then
              sudo cp -r /var/www/pterodactyl/* panel/ || echo '‚ö†Ô∏è Failed to copy panel files'
              echo \"üñ•Ô∏è Panel backup: \$(ls -1 panel | wc -l) files saved.\"
            else
              echo '‚ö†Ô∏è /var/www/pterodactyl not found.'
            fi

            # Backup Wings
            sudo mkdir -p wings
            sudo rm -rf wings/*
            if [ -d /etc/pterodactyl ]; then
              sudo cp -r /etc/pterodactyl/* wings/ || echo '‚ö†Ô∏è Failed to copy wings config'
              echo \"ü™Ω Wings backup: \$(ls -1 wings | wc -l) files saved.\"
            else
              echo '‚ö†Ô∏è /etc/pterodactyl not found.'
            fi

            # Git commit + push
            git init -q
            git config user.email 'actions@github.com'
            git config user.name 'github-actions'
            git add --all
            git commit -m \"üïê Autosave at \$(date '+%H:%M:%S')\" -q || true
            git branch -M vm-data
            git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data >/dev/null 2>&1 || true

            echo \"‚úÖ Autosave complete.\"
            sleep 10
          done" &
          echo "‚úÖ Autosave running in background."

      - name: ‚è≥ Keep VPS alive (5h30)
        run: |
          echo "‚è≥ VPS running for 5h30..."
          sleep 19800

      - name: üíæ Final save + Auto restart
        if: always()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
          WORKFLOW_FILE: main.yml
          RESTART_REF: main
        run: |
          echo "üì¶ Saving final state before restart..."
          cd "$GITHUB_WORKSPACE/vm_data"

          # Final backup
          sudo mkdir -p panel wings
          sudo rm -rf panel/* wings/*
          sudo cp -r /var/www/pterodactyl/* panel/ 2>/dev/null || true
          sudo cp -r /etc/pterodactyl/* wings/ 2>/dev/null || true

          git init -q
          git config user.email 'actions@github.com'
          git config user.name 'github-actions'
          git add --all
          git commit -m \"üíæ Final autosave before restart $(date '+%H:%M:%S')\" -q || true
          git branch -M vm-data
          git push -f https://$PAT_TOKEN@github.com/${{ github.repository }} vm-data || true

          echo \"[$(date '+%H:%M:%S')] üîÅ Restart triggered\" >> status.log
          echo \"‚ôªÔ∏è Restarting workflow...\"
          curl -X POST \
            -H \"Accept: application/vnd.github+json\" \
            -H \"Authorization: Bearer $PAT_TOKEN\" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW_FILE/dispatches \
            -d '{\"ref\":\"'$RESTART_REF'\"}'
          echo "‚úÖ Restart request sent."
