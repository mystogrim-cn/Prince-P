name: Persistent Ubuntu VPS (Pterodactyl Panel + Wings Auto-Restart)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 330

    steps:
      - name: üß± Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîÅ Restore vm_data from vm-data branch
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üîÅ Restoring vm_data..."
          rm -rf vm_data
          mkdir -p vm_data
          git clone --single-branch --branch vm-data "https://$PAT_TOKEN@github.com/${{ github.repository }}" vm_data || echo "‚ö†Ô∏è No previous data found."
          echo "‚úÖ vm_data restored (if available)."

      - name: ‚öôÔ∏è Install required packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y git curl unzip rsync nginx php php-fpm php-cli php-mbstring php-xml php-bcmath php-json php-mysql mariadb-server redis sudo
          echo "‚úÖ Dependencies installed (Docker skipped)."

      - name: ‚öôÔ∏è Start SSHX (Remote Access)
        run: |
          echo "‚öôÔ∏è Launching SSHX..."
          cd vm_data
          nohup bash -c "curl -sSf https://sshx.io/get | sh -s run > sshx_link.txt 2>&1" &
          sleep 5
          echo "üåê SSHX Link:"
          grep -Eo 'https://sshx.io/[a-zA-Z0-9]+' vm_data/sshx_link.txt || echo "‚ö†Ô∏è SSHX link not ready yet."

      - name: üß© Restore Pterodactyl Panel + Wings
        run: |
          echo "‚ôªÔ∏è Restoring Pterodactyl data..."
          sudo mkdir -p /var/www/pterodactyl /etc/pterodactyl
          sudo rsync -a vm_data/panel/ /var/www/pterodactyl/ 2>/dev/null || echo "‚ö†Ô∏è No panel data to restore."
          sudo rsync -a vm_data/wings/ /etc/pterodactyl/ 2>/dev/null || echo "‚ö†Ô∏è No wings data to restore."
          echo "‚úÖ Restore complete."

      - name: üß± Start Pterodactyl Panel + Wings
        run: |
          echo "üöÄ Starting Pterodactyl Panel + Wings..."

          sudo systemctl enable nginx php-fpm mariadb redis-server || true
          sudo systemctl start nginx php-fpm mariadb redis-server || true
          sudo systemctl start docker || true  # Docker preinstalled in GitHub runner

          # === PANEL ===
          if [ -d "/var/www/pterodactyl" ]; then
            cd /var/www/pterodactyl
            if ! ss -ltnp | grep -q ":80"; then
              echo "üåê Starting PHP built-in server..."
              nohup php artisan serve --host=0.0.0.0 --port=80 > ~/panel.log 2>&1 &
            else
              echo "‚úÖ Port 80 in use ‚Äî Nginx serving panel."
            fi
          else
            echo "‚ö†Ô∏è Panel directory not found."
          fi

          # === WINGS ===
          if [ -f "/etc/pterodactyl/config.yml" ]; then
            echo "üöÄ Launching Wings..."
            nohup sudo wings --config /etc/pterodactyl/config.yml > ~/wings.log 2>&1 &
          else
            echo "‚ö†Ô∏è Wings config not found."
          fi

      - name: üíæ Autosave (every 60s)
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üíæ Starting autosave loop..."
          nohup bash -c '
          while true; do
            echo "[ $(date "+%T") ] üîÅ Syncing panel and wings..."
            sudo mkdir -p /var/www/pterodactyl /etc/pterodactyl
            mkdir -p vm_data/panel vm_data/wings
            sudo rsync -a --delete /var/www/pterodactyl/ vm_data/panel/ 2>/dev/null || true
            sudo rsync -a --delete /etc/pterodactyl/ vm_data/wings/ 2>/dev/null || true

            cd vm_data || exit
            git init -q
            git remote remove origin >/dev/null 2>&1 || true
            git remote add origin https://$PAT_TOKEN@github.com/${{ github.repository }}
            git checkout -B vm-data >/dev/null 2>&1
            git add .
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git commit -m "üíæ Auto-backup $(date '+%F %T')" >/dev/null 2>&1 || true
            git push -f origin vm-data >/dev/null 2>&1 || true
            echo "‚úÖ Backup pushed to vm-data."
            sleep 60
          done
          ' >/dev/null 2>&1 &

      - name: üïì Keep VPS Running
        run: |
          echo "üïì VPS active ‚Äî sleeping until timeout..."
          sleep $((330*60 - 300))

      - name: ‚ôªÔ∏è Final Backup + Restart Workflow
        if: always()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "üíæ Finalizing backup..."
          sudo mkdir -p /var/www/pterodactyl /etc/pterodactyl
          sudo rsync -a --delete /var/www/pterodactyl/ vm_data/panel/ 2>/dev/null || true
          sudo rsync -a --delete /etc/pterodactyl/ vm_data/wings/ 2>/dev/null || true

          cd vm_data
          git init -q
          git remote remove origin >/dev/null 2>&1 || true
          git remote add origin https://$PAT_TOKEN@github.com/${{ github.repository }}
          git checkout -B vm-data >/dev/null 2>&1
          git add .
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -m "üíæ Final backup before restart $(date '+%F %T')" >/dev/null 2>&1 || true
          git push -f origin vm-data >/dev/null 2>&1 || true
          echo "‚úÖ Final backup complete."

          echo "‚ôªÔ∏è Restarting workflow..."
          curl -s -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $PAT_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$(basename "$GITHUB_WORKFLOW").yml/dispatches" \
            -d '{"ref":"main"}' || echo "‚ö†Ô∏è Restart request may have failed (non-blocking)."
          echo "‚úÖ Restart triggered."
